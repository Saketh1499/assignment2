<?php

ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);


function assignment_menu() {
  $items = array();
  $items['assignment_submission'] = array(
    'title' => t('Assignment Submission'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('assignment_submission_form'),
    'access arguments' => array('access content'),
    'description' => t('My form'),
    'type' => MENU_NORMAL_ITEM,
    
  );
    return $items;
}

function assignment_submission_form($form, &$form_state) {

 $form['name'] = array(
    '#type' => 'textfield',
    '#title' => t('Name'),
    '#required' => TRUE,
    '#description' => "Please enter your first name.",
    '#size' => 20,
    '#maxlength' => 20,
  );
  
  $form['roll_no'] = array(
    '#type' => 'textfield',
    '#title' => t('Roll No'),
    '#required' => TRUE,
    '#description' => "Please enter Roll No.",
    '#size' => 20,
    '#maxlength' => 20,
  );
 

$form['date'] = array(
    '#type' => 'date_select',
    '#title' => t('Date of Submission'),
    '#date_label_position' => '',
    '#description' => '  <br>',
    '#default_value' => '',
    '#date_format' => 'd-M-Y',
    //'#date_increment' => 0,
    '#date_year_range' => '2015: +22',
    '#required' => TRUE
  );

/*$form['br'] = array(
    '#type' => 'item',
    '#markup' => '<br>'
  );
*/
  $form['sub'] = array(
    '#type' => 'textfield',
    '#title' => "Subject",
    '#description' => 'Enter Subject',
    '#required' => TRUE,
    '#size' => 20,
    //'#maxlength' => 50,

  ); 

  $form['desc'] = array(
    '#type' => 'textfield',
    '#title' => 'Description',
    '#description' => 'Enter description',
    '#required' => TRUE,
    '#size' => 100,
    //'#maxlength' => 2000,

  );

  $form['files'] = array(
        '#type' => 'file',
        '#title' => t('File Upload'),
        '#attributes' => array('multiple' => 'multiple'),
        '#description' => t('<span style="color:red;">Upload a file, allowed extensions: doc docx txt pdf pptx png jpg jpeg'). '</span>',
        '#attributes' => array('multiple' => 'multiple'),
        //'file_validate_extensions' => array('doc docx txt pdf pptx png jpg jpeg'),
        //'#required' => TRUE,
  );
 

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );

/* $form['clear'] = array(
    '#type' => 'submit',
    '#value' => 'Reset form',
    '#validate' => array('assignment_submission_form_clear'),
  );
*/
  return $form;
}


function assignment_submission_form_validate($form, &$form_state) {
 /* $name = $form_state['values']['name'];
  $query = db_select('assignment_sub');
  $query = db_select('assignment_sub');
  $result = $query->execute();*/
  
  //Validation of name
  $form_state['values']['name'] = trim($form_state['values']['name']);
  if ($form_state['values']['name'] != '')
  {
    if (strlen($form_state['values']['name']) > 32)
    {
      form_set_error('name', t('Maximum charater limit is 32 charaters only, please check the length of the Name'));
    } //strlen($form_state['values']['name']) > 250
    else if (strlen($form_state['values']['name']) < 7)
    {
      form_set_error('name', t('Minimum charater limit is 7 charaters, please check the length of the Name'));
      
    }
    else if(preg_match('/[\^£$%&*()}{@#~?><>.:;`|=_+¬]/', $form_state['values']['name']))
      form_set_error('name', t('Special characters are not allowed for Name'));
   //strlen($form_state['values']['name']) < 10
  } //$form_state['values']['name'] != ''
  else
  {
    form_set_error('name', t('Name shoud not be empty'));
  }

  //validation of Roll No
  $form_state['values']['roll_no'] = trim($form_state['values']['roll_no']);
  if ($form_state['values']['roll_no'] != '')
  {
    if (strlen($form_state['values']['roll_no']) < 0)
    {
      form_set_error('roll_no', t('Minimum charater limit is 1 charaters, please check the length'));
    } //strlen($form_state['values']['roll_no']) < 1
  } //$form_state['values']['roll_no'] != ''
  else
  {
    form_set_error('roll_no', t('Roll Number number field should not be empty'));
  }

  //validation of description
  $form_state['values']['sub'] = trim($form_state['values']['sub']);
  if ($form_state['values']['sub'] != '')
  {
    if (strlen($form_state['values']['sub']) >= 50)
    {
      form_set_error('sub', t('Maximum charater limit is 50 charaters only, please check the length'));
    } //strlen($form_state['values']['subject']) >= 50
    else if (strlen($form_state['values']['sub']) < 1)
    {
      form_set_error('sub', t('Minimum charater limit is 1 charaters, please check the length'));
    } //strlen($form_state['values']['subject']) < 1
  } //$form_state['values']['subject'] != ''
  else
  {
    form_set_error('sub', t('Subject should not be empty'));
  }


  //validation of Description
   $form_state['values']['desc'] = trim($form_state['values']['desc']);
  if ($form_state['values']['desc'] != '')
  {
    if (strlen($form_state['values']['desc']) >= 2000)
    {
      form_set_error('desc', t('Maximum charater limit is 2000 charaters only, please check the length'));
    } //strlen($form_state['values']['description']) >= 50
    else if (strlen($form_state['values']['desc']) < 1)
    {
      form_set_error('desc', t('Minimum charater limit is 1 charaters, please check the length'));
    } //strlen($form_state['values']['description']) < 1
  } //$form_state['values']['description'] != ''
  else
  {
    form_set_error('desc', t('Description should not be empty'));
  }

}

  //validate Upload files
   if ($form_state['values']['files'] == 1)
  {
    if (isset($_FILES['files']))
    {
      /* check if atleast one source or result file is uploaded */
      if (!($_FILES['files']['name']['files']))
        form_set_error('files', t('Please upload a file.'));
      /* check for valid filename extensions */
      foreach ($_FILES['files']['name'] as $file_form_name => $file_name)
      {
        if ($file_name)
        {
          /* checking file type */
          if (strstr($file_form_name, 'files'))
            $file_type = 'S';
          else
            $file_type = 'U';
          $allowed_extensions_str = 'doc docx txt pdf pptx png jpg jpeg';
          $allowed_extensions = explode(',', $allowed_extensions_str);
          $fnames = explode('.', strtolower($_FILES['files']['name'][$file_form_name]));
          $temp_extension = end($fnames);
          if (!in_array($temp_extension, $allowed_extensions))
            form_set_error($file_form_name, t('Only file with ' . $allowed_extensions_str . ' extensions can be uploaded.'));
          if ($_FILES['files']['size'][$file_form_name] <= 0)
            form_set_error($file_form_name, t('File size cannot be zero.'));
          /* check if valid file name */
          if (!textbook_companion_check_valid_filename($_FILES['files']['name'][$file_form_name]))
            form_set_error($file_form_name, t('Invalid file name specified. Only alphabets and numbers are allowed as a valid filename.'));
        } //$file_name
      } //$_FILES['files']['name'] as $file_form_name => $file_name
    } //isset($_FILES['files'])
  } //$form_state['values']['ucompound'] == 1
  return;



function assignment_submission_form_submit($form, &$form_state) {

  $v = $form_state["values"];
  $name = trim($v['name']);
  $roll_no = $v['roll_no'];
  $date = $v['date'];
  $subject = $v['sub'];
  $desc = $v['desc'];
  $result = "INSERT INTO {assignment_sub}
    (
     name,
     roll_no,
     date,
     sub,
     desc,
    ) VALUES
    (
      :name,
      :roll_no,
      :date,
      :sub;
      :desc,
    )";

      $args = array(
              ":name" => $v['name'],
              "roll_no" => $v['roll_no'],
              "date" => $v['date'],
              "sub" => $v['sub'],
              "desc" => $v['desc'],
      );

      $query = db_query($result, $args, array('return' => Database::RETURN_INSERT_ID));
      $query ->execute();
     
  drupal_set_message(t('The form has been submitted and the Files has been saved.'));
}